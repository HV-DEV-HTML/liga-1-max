---
import Verificar from "@/components/Tabs/Verificar.astro";
import Buscador from "@/components/Tabs/Buscador.astro";
import 'swiper/css/bundle';
---

<section class="section_compatibility">
  <div class="container max-w-4xl xl:max-w-[1200px] mx-auto">
    <h2 class="font-roboto text-2xl lg:text-3xl xl:text-4xl text-center">¿Cómo saber si mi celular es compatible con <span class="text-claro">eSIM</span>?</h2>

    <!-- Contenedor de tabs con sliding effect -->
    <nav class="bg-white rounded-4xl overflow-hidden shadow-lg/10 my-5 xl:my-10 relative">
      <!-- Sliding indicator -->
      <div id="sliding-indicator" class="absolute top-0 left-0 h-[calc(100%)] bg-amber-300 rounded-4xl transition-all duration-300 ease-in-out z-0"></div>

      <ul class="flex relative z-10">
        <li class="flex-1 flex items-center justify-center">
          <button
            class="main_btn_tab w-full flex flex-row gap-2 justify-center items-center px-2 md:px-3.5 py-3.5 leading-[1.2] rounded-4xl font-roboto font-bold text-sm xl:text-xl text-balance text-left cursor-pointer transition-all duration-300 ease-in-out text-black relative z-10"
            data-index="0"
          >
            <svg class="size-7 md:size-5" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path fill-rule="evenodd" clip-rule="evenodd" d="M8 10C9.1046 10 10 9.1046 10 8C10 6.8954 9.1046 6 8 6C6.8954 6 6 6.8954 6 8C6 9.1046 6.8954 10 8 10Z" stroke="currentColor" stroke-width="1.33333" stroke-linecap="round" stroke-linejoin="round"/>
              <path fill-rule="evenodd" clip-rule="evenodd" d="M12.9332 10.0001C12.8444 10.2011 12.818 10.4242 12.8572 10.6405C12.8964 10.8567 12.9995 11.0563 13.1532 11.2134L13.1932 11.2534C13.3172 11.3772 13.4155 11.5243 13.4826 11.6861C13.5497 11.848 13.5842 12.0215 13.5842 12.1967C13.5842 12.3719 13.5497 12.5455 13.4826 12.7073C13.4155 12.8692 13.3172 13.0163 13.1932 13.1401C13.0694 13.2641 12.9223 13.3624 12.7604 13.4295C12.5986 13.4966 12.425 13.5311 12.2498 13.5311C12.0746 13.5311 11.9011 13.4966 11.7392 13.4295C11.5774 13.3624 11.4303 13.2641 11.3065 13.1401L11.2665 13.1001C11.1094 12.9464 10.9098 12.8433 10.6936 12.8041C10.4773 12.7649 10.2542 12.7913 10.0532 12.8801C9.85597 12.9646 9.68784 13.1049 9.56937 13.2837C9.4509 13.4626 9.38737 13.6722 9.3865 13.8867V14.0001C9.3865 14.3537 9.24604 14.6928 8.99597 14.9429C8.7459 15.1929 8.40677 15.3334 8.05317 15.3334C7.69957 15.3334 7.36044 15.1929 7.11037 14.9429C6.8603 14.6928 6.71984 14.3537 6.71984 14.0001V13.9401C6.7147 13.7194 6.64325 13.5054 6.51484 13.3259C6.38644 13.1463 6.207 13.0096 5.99984 12.9334C5.79876 12.8447 5.57571 12.8182 5.35944 12.8574C5.14318 12.8966 4.94362 12.9997 4.7865 13.1534L4.7465 13.1934C4.62267 13.3174 4.47562 13.4157 4.31376 13.4828C4.15189 13.5499 3.97839 13.5845 3.80317 13.5845C3.62795 13.5845 3.45445 13.5499 3.29258 13.4828C3.13072 13.4157 2.98367 13.3174 2.85984 13.1934C2.73587 13.0696 2.63752 12.9225 2.57042 12.7607C2.50332 12.5988 2.46879 12.4253 2.46879 12.2501C2.46879 12.0749 2.50332 11.9013 2.57042 11.7395C2.63752 11.5776 2.73587 11.4305 2.85984 11.3067L2.89984 11.2667C3.05353 11.1096 3.15663 10.9101 3.19584 10.6938C3.23505 10.4775 3.20858 10.2545 3.11984 10.0534C3.03533 9.85621 2.89501 9.68808 2.71615 9.56961C2.53729 9.45115 2.3277 9.38761 2.11317 9.38675H1.99984C1.64622 9.38675 1.30708 9.24628 1.05703 8.99621C0.806977 8.74615 0.666504 8.40701 0.666504 8.05341C0.666504 7.69981 0.806977 7.36068 1.05703 7.11061C1.30708 6.86055 1.64622 6.72008 1.99984 6.72008H2.05984C2.2805 6.71495 2.4945 6.64349 2.67404 6.51509C2.85356 6.38668 2.99032 6.20724 3.0665 6.00008C3.15525 5.799 3.18172 5.57595 3.1425 5.35969C3.1033 5.14343 3.0002 4.94387 2.8465 4.78675L2.8065 4.74675C2.68254 4.62291 2.58419 4.47587 2.51709 4.314C2.44999 4.15213 2.41546 3.97863 2.41546 3.80341C2.41546 3.62819 2.44999 3.45469 2.51709 3.29283C2.58419 3.13096 2.68254 2.98391 2.8065 2.86008C2.93034 2.73611 3.07738 2.63777 3.23925 2.57067C3.40112 2.50357 3.57462 2.46903 3.74984 2.46903C3.92506 2.46903 4.09856 2.50357 4.26042 2.57067C4.42229 2.63777 4.56934 2.73611 4.69317 2.86008L4.73317 2.90008C4.89029 3.05377 5.08985 3.15687 5.30611 3.19608C5.52238 3.23529 5.74542 3.20883 5.9465 3.12008H5.99984C6.19702 3.03557 6.36518 2.89525 6.48363 2.71639C6.60208 2.53753 6.66565 2.32794 6.6665 2.11341V2.00008C6.6665 1.64646 6.80697 1.30732 7.05704 1.05727C7.3071 0.807221 7.64624 0.666748 7.99984 0.666748C8.35344 0.666748 8.69257 0.807221 8.94264 1.05727C9.1927 1.30732 9.33317 1.64646 9.33317 2.00008V2.06008C9.33404 2.27461 9.39757 2.4842 9.51604 2.66306C9.6345 2.84192 9.80264 2.98224 9.99984 3.06675C10.2009 3.15549 10.424 3.18196 10.6402 3.14275C10.8565 3.10354 11.056 3.00044 11.2132 2.84675L11.2532 2.80675C11.377 2.68278 11.524 2.58443 11.6859 2.51733C11.8478 2.45023 12.0213 2.4157 12.1965 2.4157C12.3717 2.4157 12.5452 2.45023 12.7071 2.51733C12.869 2.58443 13.016 2.68278 13.1398 2.80675C13.2638 2.93058 13.3622 3.07763 13.4292 3.23949C13.4964 3.40136 13.5309 3.57486 13.5309 3.75008C13.5309 3.9253 13.4964 4.0988 13.4292 4.26067C13.3622 4.42253 13.2638 4.56958 13.1398 4.69341L13.0998 4.73341C12.9462 4.89053 12.843 5.09009 12.8038 5.30635C12.7646 5.52262 12.7911 5.74567 12.8798 5.94675V6.00008C12.9644 6.19726 13.1046 6.36543 13.2835 6.48387C13.4624 6.60233 13.672 6.66589 13.8865 6.66675H13.9998C14.3534 6.66675 14.6926 6.80722 14.9426 7.05728C15.1927 7.30735 15.3332 7.64648 15.3332 8.00008C15.3332 8.35368 15.1927 8.69281 14.9426 8.94288C14.6926 9.19295 14.3534 9.33341 13.9998 9.33341H13.9398C13.7253 9.33428 13.5157 9.39781 13.3368 9.51628C13.158 9.63475 13.0177 9.80288 12.9332 10.0001V10.0001Z" stroke="currentColor" stroke-width="1.33333" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            <h3 class="text-sm xl:text-xl text-balance text-left">Verificar en 3 pasos desde el celular</h3>
          </button>
        </li>
        <li class="flex-1 flex items-center justify-center">
          <button
            class="main_btn_tab w-full flex flex-row gap-2 justify-center items-center px-2 md:px-3.5 py-3.5 leading-[1.2] rounded-4xl font-roboto font-bold text-sm xl:text-xl text-balance text-left cursor-pointer transition-all duration-300 ease-in-out text-gray-400 relative z-10"
            data-index="1"
          >
            <svg class="size-7 md:size-5" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path fill-rule="evenodd" clip-rule="evenodd" d="M7.33333 12.6667C10.2789 12.6667 12.6667 10.2789 12.6667 7.33333C12.6667 4.38781 10.2789 2 7.33333 2C4.38781 2 2 4.38781 2 7.33333C2 10.2789 4.38781 12.6667 7.33333 12.6667Z" stroke="currentColor" stroke-width="1.33333" stroke-linecap="round" stroke-linejoin="round"/>
              <path d="M14.0001 13.9996L11.1001 11.0996" stroke="currentColor" stroke-width="1.33333" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            <h3 class="text-sm xl:text-xl text-balance text-left">Verificar a través de un buscador</h3>
          </button>
        </li>
      </ul>
    </nav>

    <!-- Contenido de las tabs -->
    <div class="tab-content">
      <Verificar/>
      <Buscador/>
    </div>
  </div>
</section>

<script>
  const section = document.querySelector(".section_compatibility");
  const btnsTabs = section.querySelectorAll(".main_btn_tab");
  const slidingIndicator = section.querySelector("#sliding-indicator") as HTMLElement;
  const tabPanels = section.querySelectorAll(".tab-panel");

  function updateSlidingIndicator(activeTab) {
    // Calcular la posición y el ancho del indicador
    const left = activeTab.offsetLeft;
    const width = activeTab.offsetWidth;
    // Aplicar las transformaciones al indicador
    slidingIndicator.style.transform = `translateX(${left}px) scaleY(0.1) scaleX(1)`;
    slidingIndicator.style.width = `${width}px`;
    setTimeout(() => {
      slidingIndicator.style.transform = `translateX(${left}px) scaleY(1) scaleX(1)`;
    }, 150); // la mitad del tiempo
  }

  function showTabContent(index) {
    tabPanels.forEach((panel, i) => {
      if (i === parseInt(index)) {
        panel.classList.remove("hidden");
        panel.classList.add("animate-fade-in");
      } else {
        panel.classList.add("hidden");
        panel.classList.remove("animate-fade-in");
      }
    });
  }

  if (btnsTabs.length) {
    btnsTabs.forEach((tabBtn) => {
      tabBtn.addEventListener("click", () => {
        const index = tabBtn.getAttribute("data-index");

        // Remover clases activas de todos los tabs
        btnsTabs.forEach((item) => {
          item.classList.remove("text-black");
          item.classList.add("text-gray-400");
        });

        // Agregar clases activas al tab clickeado
        tabBtn.classList.add("text-black");
        tabBtn.classList.remove("text-gray-400");

        // Actualizar posición del indicador deslizante
        updateSlidingIndicator(tabBtn);

        // Mostrar contenido correspondiente
        showTabContent(index);
      });
    });

    // Inicializar el indicador en la primera tab
    (btnsTabs[0] as HTMLButtonElement).click()

    // Actualizar indicador cuando la ventana cambie de tamaño
    // window.addEventListener("resize", () => {
    //   const activeTab = document.querySelector(".main_btn_tab.text-black") || btnsTabs[0];
    //   updateSlidingIndicator(activeTab);
    // });
  }
</script>
